[gd_resource type="Shader" format=3 uid="uid://utw7kwox8g5x"]

[resource]
code = "shader_type spatial;
render_mode unshaded, blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec3 lightdir = vec3(0.7, -0.7, -0.1);
uniform vec3 noselight = vec3(0.3, 0.5, -1.0);
uniform float lightsquaredfac = 7.0;
void vertex() {
	float coldim = min(1.0, 0.5+0.2*inversesqrt(abs(dot(NORMAL, lightdir))));
	vec3 vlight = (MODEL_MATRIX*vec4(VERTEX, 1.0)).xyz - noselight;
	float vlightsquared = lightsquaredfac*dot(vlight, vlight);
	float lightdim = max(0.2, 1.0 - vlightsquared);
	COLOR.xyz *= coldim*lightdim;
}

void fragment() {
	vec2 base_uv = UV;
	ALBEDO = COLOR.rgb;
	ROUGHNESS = 1.0;
}
"
